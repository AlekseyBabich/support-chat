#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'built-in'
    }
    triggers { pollSCM('* */1 * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                sh 'docker login -u neo -p admin123 nexus.vsquad.ru:8082'
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('./') {
                	sh 'docker build -t nexus.vsquad.ru:8082/frontend:latest -f frontend.dockerfile .'
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker push nexus.vsquad.ru:8082/frontend:latest
                '''
            }
        }
    }
    post {
        success {
            withCredentials([string(credentialsId: 'tokenBot', variable: 'TOKEN'), string(credentialsId: 'chatWebId', variable: 'CHAT_ID')]) {
                sh  ("""
            curl -s -X POST https://api.telegram.org/bot$TOKEN/sendMessage -d chat_id=$CHAT_ID -d parse_mode=HTML -d text='<div><h3>$env.JOB_NAME<h3/> : POC Branch: $env.GIT_BRANCH Build: OK Published = YES<div/>
        """)
            }
        }

        aborted {
            withCredentials([string(credentialsId: 'tokenBot', variable: 'TOKEN'), string(credentialsId: 'chatWebId', variable: 'CHAT_ID')]) {
                sh  ("""
            curl -s -X POST https://api.telegram.org/bot$TOKEN/sendMessage -d chat_id=$CHAT_ID -d parse_mode=HTML -d text='<div>$env.JOB_NAME : POC Branch: $env.GIT_BRANCH Build : Aborted Published = Aborted<div/>'
        """)
            }

        }
        failure {
            withCredentials([string(credentialsId: 'tokenBot', variable: 'TOKEN'), string(credentialsId: 'chatWebId', variable: 'CHAT_ID')]) {
                sh  ("""
            curl -s -X POST https://api.telegram.org/bot$TOKEN/sendMessage -d chat_id=$CHAT_ID -d parse_mode=HTML -d text='<div>$env.JOB_NAME : POC  Branch: $env.GIT_BRANCH Build : not OK Published = no<div/>'
        """)
            }
        }

    }
}