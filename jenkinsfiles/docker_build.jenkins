#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'built-in'
    }
    triggers { pollSCM('* */1 * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                sh 'docker login -u neo -p admin123 nexus.vsquad.ru:8082'
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('./') {
                	sh 'docker build -t nexus.vsquad.ru:8082/frontend:latest -f frontend.dockerfile .'
                }
                dir ('./') {
                    sh 'docker build -t nexus.vsquad.ru:8082/backend:latest -f backend.dockerfile .'
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker push nexus.vsquad.ru:8082/frontend:latest
                docker push nexus.vsquad.ru:8082/backend:latest
                '''
            }
        }
        stage("docker pull via ansible") {
            steps {
                echo " ============== start pulling image =================="
                ansiblePlaybook(credentialsId: 'ansible', inventory: 'ansible/inventories/inventory.yml', playbook: 'ansible/prepare_docker_pull_playbook.yml')
            }
        }
        stage("send message to telegram") {
            steps {
                sh 'curl https://api.telegram.org/bot6181588438:AAHxZsdYO9P7thNoLkNW2riJZltE75bXTZE/sendMessage -d chat_id=-884385757 -d text=\'âœ… Build successful. ' +
                        'All containers are assembled, pulled and launched ðŸ˜Ž\''
            }
        }
    }
}